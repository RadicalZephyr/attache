#!/usr/bin/env bash

# Copied shamelessly from rbenv, copyright Sam Stephenson
# See LICENSE.rbenv for details

set -e
export -n CDPATH

if [ "$1" = "--debug" ]; then
  export HERMIT_DEBUG=1
  shift
fi

if [ -n "$HERMIT_DEBUG" ]; then
  export PS4='+ [${BASH_SOURCE##*/}:${LINENO}] '
  set -x
fi

# Make sure git is installed
GIT=$(type -p git | head -1)
if [ -z "$GIT" ]; then
    echo "Hermit relies heavily on git for it's functionality."
    echo
    echo "Please install git before attempting to use Hermit."
    exit 1
fi

export READLINK=$(type -p greadlink readlink | head -1)
if [ -z "$READLINK" ]; then
  echo "hermit: cannot find readlink - are you missing GNU coreutils?" >&2
  exit 1
fi

resolve_link() {
  $READLINK "$1"
}

abs_dirname() {
  local cwd="$(pwd)"
  local path="$1"

  while [ -n "$path" ]; do
    cd "${path%/*}"
    local name="${path##*/}"
    path="$(resolve_link "$name" || true)"
  done

  pwd
  cd "$cwd"
}

export HERMIT_CURRENT_KEY="hermit.current"

if [ -z "${HERMIT_ROOT}" ]; then
  HERMIT_ROOT="${HOME}/.hermit"
else
  HERMIT_ROOT="${HERMIT_ROOT%/}"
fi
export HERMIT_ROOT

if [ -z "${SECRETS_SUFFIX}" ]; then
    SECRETS_SUFFIX="hermit_secrets"
else
    SECRETS_SUFFIX="${SECRETS_SUFFIX#.}"
fi
export SECRETS_SUFFIX

if [ -z "${ENCRYPTED_SECRETS_SUFFIX}" ]; then
    ENCRYPTED_SECRETS_SUFFIX="gpg"
else
    ENCRYPTED_SECRETS_SUFFIX="${ENCRYPTED_SECRETS_SUFFIX#.}"
fi
export ENCRYPTED_SECRETS_SUFFIX

if [ -z "${COMPLETE_SUFFIX}" ]; then
    COMPLETE_SUFFIX="hermit_complete"
else
    COMPLETE_SUFFIX="${COMPLETE_SUFFIX#.}"
fi
export COMPLETE_SUFFIX

shopt -s nullglob

bin_path="$(abs_dirname "$0")"
for plugin_bin in "${HERMIT_ROOT}/plugins/"*/bin; do
  bin_path="${bin_path}:${plugin_bin}"
done
export PATH="${bin_path}:${PATH}"

source "${HERMIT_ROOT}/lib/utilities"

# We unconditionally reset the profile from git config. This is far
# less confusing behavior, and in reality it's not really a good thing
# to let a user just pretend they're using a certain profile
HERMIT_PROFILE=$(get_current_profile)
HERMIT_PROFILE="${HERMIT_PROFILE:-default}"

HERMIT_PROFILE_PATH="$HERMIT_ROOT/profiles/$HERMIT_PROFILE"
export HERMIT_PROFILE HERMIT_PROFILE_PATH

# Currently, we don't actually do anything with hooks. We may want to
# support them in the future though, so keep this code hunk.

# hook_path="${HERMIT_HOOK_PATH}:${HERMIT_ROOT}/hermit.d:/usr/local/etc/hermit.d:/etc/hermit.d:/usr/lib/hermit/hooks"
# for plugin_hook in "${HERMIT_ROOT}/plugins/"*/etc/hermit.d; do
#   hook_path="${hook_path}:${plugin_hook}"
# done
# export HERMIT_HOOK_PATH="$hook_path"

shopt -u nullglob


command="$1"
case "$command" in
"" | "-h" | "--help" )
  echo -e "$(hermit---version)\n$(hermit-help)" >&2
  ;;
"-v" )
  exec hermit---version
  ;;
* )
  command_path="$(command -v "hermit-$command" || true)"
  if [ -z "$command_path" ]; then
    echo "hermit: no such command \`$command'" >&2
    exit 1
  fi

  shift 1
  exec "$command_path" "$@"
  ;;
esac
